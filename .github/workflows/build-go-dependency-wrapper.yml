name: Go Dependency Wrapper

on:
  workflow_dispatch:
    inputs:
      update_go_deps:
        description: 'Update go dependencies with `go get -u ./...'
        required: false
        type: boolean
        defualt: false
      go_update_patch_only:
        description: '(only used if `update_go_deps` is `true`) When updating, only update the patch version.'
        required: false
        type: boolean
        default: true
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*-build' # Matches 1.0.0-build, 2.1.3-beta-build, etc.

# Tags must be done on `main` - see step `Update Package`


jobs:
  wg-build:
    name: Wireguard Build and Release
    runs-on: macos-15

    concurrency:
      # Only allow a single run of this workflow on each branch, automatically cancelling older runs.
      group: wg-${{ github.head_ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Determine Tag
      #   id: tag
      #   run: |
      #     set -x

      #     RAW_TAG=${GITHUB_REF#refs/tags/}
      #     if [[ "$RAW_TAG" == "$GITHUB_REF" ]]; then
      #       echo "Must be a tag."
      #       exit1
      #     fi

      #     TAG=${RAW_TAG%-build}

      #     if [[ "$TAG" == "$RAW_TAG" ]]; then
      #       echo "Incorrect tag format"
      #       exit 1
      #     fi

      #     echo "RAW_TAG=${RAW_TAG}" >> "$GITHUB_OUTPUT"
      #     echo "TAG=${TAG}" >> "$GITHUB_OUTPUT"
      #   env:
      #     GITHUB_EVENT_NAME: ${{ github.event_name }}
      #     GITHUB_BASE_BRANCH: ${{ github.base_ref }}
      #     GITHUB_REF: ${{ github.ref }}

      - name: Select Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode_16.4.app

      # - name: Install Dependencies
      #   run: |
      #     brew install go

      - name: Handle Inputs
        run: |
          set -xoe
          echo $RUN_UPDATES
          echo $PATCH_ONLY_UPDATES

          exit 1
        env:
          RUN_UPDATES: ${{ github.event.inputs.update_go_deps }}
          PATCH_ONLY_UPDATES: ${{ github.event.inputs.go_update_patch_only }}

      - name: Build XCFramework
        run: |
          set -xoe

          pushd WireGuardGoFoundationSource
          make build-xcframework

          zip -ry WireGuardGoFoundation.xcframework.zip WireGuardGoFoundation.xcframework
          popd
          mv WireGuardGoFoundationSource/WireGuardGoFoundation.xcframework.zip .

      - name: Update Package
        run: |
          set -xoe

          CHECKSUM=$(swift package compute-checksum WireGuardGoFoundation.xcframework.zip)
          NEW_URL="https://github.com/${{ github.repository }}/releases/download/${TAG}/WireGuardGoFoundation.xcframework.zip"

          sed -i "" "s|let url = \".*\"|let url = \"$NEW_URL\"|" Package.swift
          sed -i "" "s|let checksum = \".*\"|let checksum = \"$CHECKSUM\"|" Package.swift

          git add Package.swift
          git commit -m "Release ${TAG}"
          git push origin HEAD:main
          git tag ${TAG}
          git push origin ${TAG}
        env:
          TAG: ${{ steps.tag.outputs.TAG }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: WireGuardGoFoundation.xcframework.zip
          make_latest: true
          tag_name: ${{ steps.tag.outputs.TAG }}
